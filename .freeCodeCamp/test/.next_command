builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
touch questionnaire.sh
sh questionnre.sh
sh questionnree.sh
sh questionnre.sh
sh questionnaire.sh
bash questionnaire.sh
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
which bash
./questionnaire.sh
__vsc_prompt_cmd_original
ls --color=auto -l
__vsc_prompt_cmd_original
chmod +x questionnaire.sh
ls --color=auto -l
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
__vsc_prompt_cmd_original
./questionnaire.sh
echo help
echo --help
__vsc_prompt_cmd_original
man echo
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
__vsc_prompt_cmd_original
./questionnaire.sh
./questionnaire.sh
__vsc_prompt_cmd_original
./questionnaire.sh
./questionnaire.sh
__vsc_prompt_cmd_original
touch countdown.sh
chmod +x countdown.sh
__vsc_prompt_cmd_original
./countdown.sh
./countdown.sh arg1 arg2 arg3
./countdown.sh arg1 arg2 arg3
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
help if
help
__vsc_prompt_cmd_original
man if
help if
./countdown.sh arg1
./countdown.sh arg2
./countdown.sh arg2
./countdown.sh arg2
__vsc_prompt_cmd_original
./countdown.sh 4
./countdown.sh 5
-lt help
help -lt
-lt --help
help
help expressions
help [[ expression ]]
help expression
info expresssions
info expression
help expression
help test
./countdown.sh 5
__vsc_prompt_cmd_original
./countdown.sh [[ 4 -le 5 ]]
[[ 4 -le 5 ]]
echo $?
__vsc_prompt_cmd_original
[[ 4 -ge 5 ]]
echo $?
[[ 4 -ge 5 ]]
[[ 10 != 5 ]]
[[ 10 -ne 5 ]]
bad_command
__vsc_prompt_cmd_original
ls --color=auto
ls --color=auto -y
help test
[[ -a countdown.sh ]]
[[ -n bad_file.txt ]]
[[ -n bad_file.txt ]]
[[ -a bad_file.txt ]]
[[ -x countdown.sh ]]
help [[
[[ -x countdown.sh && 5 -le 4 ]]
[[ -x countdown.sh || 5 -le 4 ]]
./countdown.sh
./countdown.sh 1
__vsc_prompt_cmd_original
./countdown.sh
help
./countdown.sh 10
help
ls --color=auto /
ls --color=auto /bin
man sleep
man sleep
sleep 3
./countdown.sh 3
./countdown.sh 3
./countdown.sh 3
./countdown.sh 3
./countdown.sh 1
help while
./countdown.sh 5
touch bingo.sh
chmod +x bingo.sh
./bingo sh
./bingo.sh
ls --color=auto
./bingo.sh
./countdown.sh
sh bingo.sh
bingo.sh
.bingo.sh
./bingo.sh
./bingo.sh
./bingo.sh
./bingo.sh
printenv
echo LANG
echo $LANG
declare -p
echo $RANDOM
./bingo.sh
./bingo.sh
./bingo.sh
I=0
echo $I
(( I++ ))
echo $I
help let
(( I += 10 ))
echo $?
echo $I
$(( I + 4 ))
echo $(( I + 4 ))
echo $I
J=$(( I - 6 ))
echo $J
